// src/EfdpChart.js
import React, { useState } from 'react';
import ChartComponent from './ChartComponent'; // Import the existing ChartComponent

const EfdpChart = () => {
  // Move the data object here
  const [data, setData] = useState({
    labels: [
      '2009-09-26', '2009-12-31', '2010-06-30', '2010-09-25', '2010-12-31',
      '2011-01-30', '2011-06-30', '2011-09-24', '2011-12-31', '2012-01-29',
      '2012-06-30', '2012-09-29', '2012-12-31', '2013-01-27', '2013-06-30',
      '2013-09-28', '2013-12-31', '2014-01-26', '2014-06-30', '2014-09-27',
      '2014-12-31', '2015-01-25', '2015-06-30', '2015-09-26', '2015-12-31',
      '2016-01-31', '2016-06-30', '2016-09-24', '2016-12-31', '2017-01-29',
      '2017-06-30', '2017-09-30', '2017-12-31', '2018-01-28', '2018-06-30',
      '2018-09-29', '2018-12-31', '2019-01-27', '2019-06-30', '2019-09-28',
      '2019-12-31', '2020-01-26', '2020-06-30', '2020-09-26', '2020-12-31',
      '2021-01-31', '2021-06-30', '2021-09-25', '2021-12-31', '2022-01-30',
      '2022-06-30', '2022-09-24', '2022-12-31', '2023-01-29', '2023-06-30',
      '2023-09-30', '2023-12-31', '2024-01-28', '2024-06-30'
    ],
    datasets: [
      {
        label: 'NVDA (USD)',
        data: [null, null, null, 253146000, 417118000, 417118000, 417118000, 581090000, 571813000, 571813000, 571813000, 562536000, 501263000, 501263000, 501263000, 439990000, 535288500, 535288500, 535288500, 630587000, 622293500, 622293500, 622293500, 614000000, 1140000000, 1140000000, 1140000000, 1666000000, 2356500000, 2356500000, 2356500000, 3047000000, 3594000000, 3594000000, 3594000000, 4141000000, 3468500000, 3468500000, 3468500000, 2796000000, 3564000000, 3564000000, 3564000000, 4332000000, 7042000000, 7042000000, 7042000000, 9752000000, 7060000000, 7060000000, 7060000000, 4368000000, 17064000000, 17064000000, 17064000000, 29760000000],
        borderColor: 'rgba(255, 99, 132, 1)',
        backgroundColor: 'rgba(255, 99, 132, 0.2)',
        yAxisID: 'y-axis-1',
        hidden: false
      },
      {
        label: 'GOOG (USD)',
        data: [null, null, null, null, null, null, 16348000000, 17913000000, 17913000000, 17913000000, 19478000000, 16070000000, 16070000000, 16070000000, 12662000000, 21699000000, 21699000000, 21699000000, 30736000000, 32539500000, 32539500000, 32539500000, 34343000000, 37306000000, 37306000000, 37306000000, 40269000000, 58151000000, 58151000000, 58151000000, 76033000000, 68002500000, 68002500000, 68002500000, 59972000000, 66883500000, 66883500000, 66883500000, 73795000000],
        borderColor: 'rgba(54, 162, 235, 1)',
        backgroundColor: 'rgba(54, 162, 235, 0.2)',
        yAxisID: 'y-axis-1',
        hidden: false
      },
      {
        label: 'MSFT (USD)',
        data: [null, null, 18760000000, 20955000000, 20955000000, 20955000000, 23150000000, 20064000000, 20064000000, 20064000000, 16978000000, 19420500000, 19420500000, 19420500000, 21863000000, 21968500000, 21968500000, 21968500000, 22074000000, 17133500000, 17133500000, 17133500000, 12193000000, 14495500000, 14495500000, 14495500000, 16798000000, 19001000000, 19001000000, 19001000000, 21204000000, 18887500000, 18887500000, 18887500000, 16571000000, 27905500000, 27905500000, 27905500000, 39240000000, 41760500000, 41760500000, 41760500000, 44281000000, 52776000000, 52776000000, 52776000000, 61271000000, 67004500000, 67004500000, 67004500000, 72738000000, 72549500000, 72549500000, 72549500000, 72361000000, 80248500000, 80248500000, 80248500000, 88136000000],
        borderColor: 'rgba(75, 192, 192, 1)',
        backgroundColor: 'rgba(75, 192, 192, 0.2)',
        yAxisID: 'y-axis-1',
        hidden: false
      },
      // Continue this process for AAPL, AMZN, META, TSLA
    ]
  });

  // Handle checkbox change to show/hide datasets
  const handleCheckboxChange = (index) => {
    const updatedData = { ...data };
    updatedData.datasets[index].hidden = !updatedData.datasets[index].hidden; // Toggle the hidden property
    setData(updatedData); // Update the data state
  };

  return (
    <div style={{ display: 'flex' }}>
      {/* Checkbox Section */}
      <div style={{ marginRight: '20px', display: 'flex', flexDirection: 'column' }}>
        {data.datasets.map((dataset, index) => (
          <label key={index}>
            <input
              type="checkbox"
              checked={!dataset.hidden} // If dataset is not hidden, checkbox is checked
              onChange={() => handleCheckboxChange(index)}
            />
            {dataset.label}
          </label>
        ))}
      </div>

      {/* Chart Section */}
      <div style={{ flex: 1 }}>
        <ChartComponent data={data} />
      </div>
    </div>
  );
};

export default EfdpChart;
